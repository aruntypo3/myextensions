<?php

/* * *************************************************************
 *  Copyright notice
 *
 *  (c) 2013 Sivaprasad,Abin <abin.s@pitsolutions.com,sivaprasad.s@pitsolutions.com>, PITS
 *
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 * ************************************************************* */

/**
 *
 *
 * @package pits_elearn
 * @license http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later
 *
 */
class Tx_PitsElearn_Controller_ElearningController extends Tx_Extbase_MVC_Controller_ActionController {

    protected $eLearningModel;

    public function __construct() {
        $this->eLearningModel = new Tx_PitsElearn_Domain_Model_Elearning();
        $this->cObj = t3lib_div::makeInstance('tslib_cObj');
    }

    /**
     * action list
     *
     * @return void
     */
    public function selectAction() {
        $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionView", '');
        $GLOBALS["TSFE"]->fe_user->sesData_change = true;
        $GLOBALS["TSFE"]->fe_user->storeSessionData();
        $this->cObj = $this->configurationManager->getContentObject();
        $recordPid = $this->cObj->data['pages'];
        $elearningsThema = $this->eLearningModel->doGetThema($recordPid);
        $request = $this->request->getArguments();
        if (sizeof($request) > 0) {
            if (!empty($request['tnt_thema'])) {
                $currentSesssion['selectedThema'] = $request['tnt_thema'];
                $detailSession['selectedThema'] = $request['tnt_thema'];
            }
            if (!empty($request['tnt_thema_chapter'])) {
                $currentSesssion['selectedChapter'] = $request['tnt_thema_chapter'];
                $detailSession['selectedChapter'] = $request['tnt_thema_chapter'];
            }
            $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionVal", serialize($currentSesssion));
            $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionView", $detailSession);
            $GLOBALS["TSFE"]->fe_user->sesData_change = true;
            $GLOBALS["TSFE"]->fe_user->storeSessionData();
            $conf = array(
                'parameter' => $this->settings['targetPage'],
                'additionalParams' => '&tx_pitselearn_pitselearn[action]=detail',
                'useCashHash' => true,
                'returnLast' => 'url',
            );
            $location = $GLOBALS['TSFE']->baseUrl . $this->cObj->typoLink('', $conf);
            $this->redirectToURI($location);
        }
        else {
            $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionVal", "");
            $GLOBALS["TSFE"]->fe_user->sesData_change = true;
            $GLOBALS["TSFE"]->fe_user->storeSessionData();
        }

        $this->view->assign('action', t3lib_div::getIndpEnv('TYPO3_SITE_URL') . "index.php?id=" . $this->settings['targetPage']);
        $this->view->assign('extensionPathJs', t3lib_extMgm::siteRelPath('pits_elearn') . 'Resources/Public/Js/');
        $this->view->assign('pageId', $GLOBALS['TSFE']->id);
        $this->view->assign('sysLangId', $GLOBALS['TSFE']->sys_language_uid);
        $this->view->assign('elearnings', $elearningsThema);
    }

    /**
     * action show
     *
     * @param Tx_PitsElearn_Domain_Model_Elearning $elearning
     * @return void
     */
    public function ajaxChaptersAction() {
        $this->view->assign('sysLangId', $GLOBALS['TSFE']->sys_language_uid);
        $request = $this->request->getArguments();
        echo $content = $this->doGetContent($request['themaValue']);
        exit();
    }

    public function doGetContent($themaValue) {
        $selected = '';
        $themaChapters = $this->eLearningModel->doGetChapters($themaValue);
        $sessionViewValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionView");
        //print_r($sessionViewValue);
        $content.="<label><select name='tx_pitselearn_pitselearn[tnt_thema_chapter]' class = 'selects-holder'>";
        $i = 1;
        if (!empty($themaChapters)) {
            foreach ($themaChapters as $key => $value) {
                if ($sessionViewValue['selectedChapter'] == $key) {
                    #echo "eneter";
                    $selected = 'selected';
                }
                # selected='".$selected."'
                $content.="<option value='" . $key . "'>" . $value . "</option>";
                $i++;
            }
        }
        else {
            $content.="<option value='null'><f:translate key='no_selection'>Nothing Selected!</f:translate></option>";
        }
        $content.="</select></label>";
        return $content;
    }

    /**
     * action list
     *
     * @return void
     */
    public function detailAction() {
        $request = $this->request->getArguments();
        if (!empty($_GET['L'])) {
            $GLOBALS['TSFE']->sys_language_uid = $_GET['L'];
        }
        $targetPage = (!empty($this->settings['targetPage']) ) ? $this->settings['targetPage'] : $GLOBALS['TSFE']->id;
        $successData['lastQuestFlag'] = '';
        $storeSessionValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionVal");
        if (( sizeof($storeSessionValue) > 0))
            $storeSessionValue = unserialize($storeSessionValue);

        if ($storeSessionValue['currentRecordCount'] == 0 && $request['submit'] != "submit") {
            $storeSessionValue['currentRecordCount'] = 0;
            if (is_null($storeSessionValue['currentRecordCount'])) {
                $storeSessionValue['currentRecordCount'] = 0;
            }
        }

        $currentSesssion['selectedThema'] = !empty($request['tnt_thema']) ? $request['tnt_thema'] : $storeSessionValue['selectedThema'];
        $currentSesssion['selectedChapter'] = !empty($request['tnt_thema_chapter']) ? $request['tnt_thema_chapter'] : $storeSessionValue['selectedChapter'];
        $currentSesssion['currentRecordCount'] = $storeSessionValue['currentRecordCount'];
        $currentSesssion['currentRandomSeed'] = (!empty($storeSessionValue['currentRandomSeed']) ) ? $storeSessionValue['currentRandomSeed'] : time();
        $currentSesssion['answerRecord'] = $storeSessionValue['answerRecord'];

        //Store current data in seesion
        $this->storeSession($currentSesssion);
        $storeSessionValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionVal");
        if (( sizeof($storeSessionValue) > 0))
            $storeSessionValue = unserialize($storeSessionValue);

        $whereClause = array();

        $whereClause['dragdrop'] = $this->cObj->enableFields('tx_pitselearn_domain_model_dragdrop') . ' AND tx_pitselearn_domain_model_dragdrop.sys_language_uid = ' . $GLOBALS['TSFE']->sys_language_uid;
        $whereClause['freetext'] = $this->cObj->enableFields('tx_pitselearn_domain_model_freetextquestion'). ' AND tx_pitselearn_domain_model_freetextquestion.sys_language_uid = ' . $GLOBALS['TSFE']->sys_language_uid;;
        $whereClause['multiple_choice'] = $this->cObj->enableFields('tx_pitselearn_domain_model_multiplechoice'). ' AND tx_pitselearn_domain_model_multiplechoice.sys_language_uid = ' . $GLOBALS['TSFE']->sys_language_uid;;
        $whereClause['matrix'] = $this->cObj->enableFields('tx_pitselearn_domain_model_matrix'). ' AND tx_pitselearn_domain_model_matrix.sys_language_uid = ' . $GLOBALS['TSFE']->sys_language_uid;;

        //Reset all the values and start again
        $questionCount = $this->eLearningModel->doGetQuesions($whereClause, $questCount = TRUE);
        if ($storeSessionValue['currentRecordCount'] > $questionCount - 1) {
            $currentSesssion = $this->doGetRestRecords($storeSessionValue['answerRecord'], $questionCount);
            $this->storeSession($currentSesssion);
            $this->forward('resultRender','Elearning','pitsElearn');
            //$this->redirect('detail', 'Elearning', 'Pitselearn',array(),$this->settings['targetPage'], $delay = 0, $statusCode = 303);

/*            $conf = array(
                'parameter' => $this->settings['targetPage'],
                'additionalParams' => '&tx_pitselearn_pitselearn[action]=resultRender',
                'useCashHash' => false,
                'returnLast' => 'url',
            );
            $location = $GLOBALS['TSFE']->baseUrl . $this->cObj->typoLink('', $conf);
            $this->redirectToURI($location);*/
        }

        $questionRecord = $this->eLearningModel->doGetQuesions($whereClause, $questCount = FALSE);
        $answerRecordKey = $questionRecord['type'] . "_" . $questionRecord['question_id'];

        $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'] = (!empty($storeSessionValue['answerRecord'][$answerRecordKey]['answerText']) ) ? $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'] : '';
        $storeSessionValue['answerRecord'][$answerRecordKey]['point'] = $storeSessionValue['answerRecord'][$answerRecordKey]['point'];
        $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] = $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'];
        $this->storeSession($storeSessionValue);

        switch ($questionRecord['type']) {
            case 'freetext' :
                $this->view->setTemplatePathAndFilename(t3lib_extMgm::siteRelPath('pits_elearn') . 'Resources/Private/Templates/Elearning/Freetext.html');
                $freetextPrefillAnswer['prefillRecord'] = ( isset($storeSessionValue['answerRecord'][$answerRecordKey]['point']) ) ? $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'] : '';
                $buttonOptions['buttonChange'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'active' : 'disable';
                $buttonOptions['showAskAgain'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'none' : '';
                $buttonOptions['askAgainButtonValue'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 && !is_null($storeSessionValue['answerRecord'][$answerRecordKey]['point']) ) ? Tx_Extbase_Utility_Localization::translate('pits_elearn.askAgain', 'pitsElearn') : Tx_Extbase_Utility_Localization::translate('pits_elearn.checkAnswer', 'pitsElearn');
                $buttonOptions['showSolutionStatus'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 ) ? 'disabled' : '';
                $buttonOptions['showSolutionStatus'] = $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'];
                $this->view->assign('prefillAnswer', $freetextPrefillAnswer);
                break;
            case 'matrix' :
                $this->view->setTemplatePathAndFilename(t3lib_extMgm::siteRelPath('pits_elearn') . 'Resources/Private/Templates/Elearning/Matrix.html');
                $optionsValues = $this->eLearningModel->doGetMatrixOption($questionRecord['question_id']);
                foreach ($optionsValues['quest'] as $value['uid'] => $value) {
                    foreach ($value['options'] as $index => $matrixOptions) {
                        if (isset($storeSessionValue['answerRecord'][$answerRecordKey]['point'])) {
                            $optionsValues['quest'][$value['uid']]['options'][$index]['checked'] = ( in_array($matrixOptions['id'], $storeSessionValue['answerRecord'][$answerRecordKey]['answerText']['mat_question_id'][$value['quest_id']]) ) ? 'checked' : '';
                        }
                    }
                }

                $buttonOptions['buttonChange'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'active' : 'disable';
                $buttonOptions['showAskAgain'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'none' : '';
                $buttonOptions['askAgainButtonValue'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 && !is_null($storeSessionValue['answerRecord'][$answerRecordKey]['point']) ) ? Tx_Extbase_Utility_Localization::translate('pits_elearn.askAgain', 'pitsElearn') : Tx_Extbase_Utility_Localization::translate('pits_elearn.checkAnswer', 'pitsElearn');
                $buttonOptions['showSolutionStatus'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 ) ? 'disabled' : '';
                $buttonOptions['showSolutionStatus'] = $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'];
                $this->view->assign('matrixQuestionsOptions', $optionsValues);
                break;
            case 'dragdrop' :
                $this->view->setTemplatePathAndFilename(t3lib_extMgm::siteRelPath('pits_elearn') . 'Resources/Private/Templates/Elearning/Dragdrop.html');
                $dragdropOptions = $this->eLearningModel->doGetDragDropOption($questionRecord['question_id']);
                foreach ($dragdropOptions as $key => $value) {
                    if (isset($storeSessionValue['answerRecord'][$answerRecordKey]['point'])) {
                        if (!empty($storeSessionValue['answerRecord'][$answerRecordKey]['answerText'][$value['uid']]['answerImagePath'])) {
                            $dragdropOptions[$key]['imagePath'] = $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'][$value['uid']]['answerImagePath'];
                            $dragdropOptions[$key]['imageId'] = $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'][$value['uid']]['answerId'];
                            $dragdropOptions[$key]['imagePosition'] = $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'][$value['uid']]['position'];
                            $dragdropOptions[$key]['setSession'] = TRUE;
                            $dragdropOptions[$key]['imagePosition_default'] = 0;
                        }
                    }
                    else {
                        $dragdropOptions[$key]['imagePosition_default'] = 1;
                        $dragdropOptions[$key]['setSession'] = FALSE;
                    }
                }
                $buttonOptions['buttonChange'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'active' : 'disable';
                $buttonOptions['showAskAgain'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'none' : '';
                $buttonOptions['askAgainButtonValue'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 && !is_null($storeSessionValue['answerRecord'][$answerRecordKey]['point']) ) ? Tx_Extbase_Utility_Localization::translate('pits_elearn.askAgain', 'pitsElearn') : Tx_Extbase_Utility_Localization::translate('pits_elearn.checkAnswer', 'pitsElearn');
                $buttonOptions['showSolutionStatus'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 ) ? 'disabled' : '';
                $buttonOptions['showSolutionStatus'] = $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'];
                $this->view->assign('dragdropOptions', $dragdropOptions);
                break;
            case 'mutiple_choice' :
                $this->view->setTemplatePathAndFilename(t3lib_extMgm::siteRelPath('pits_elearn') . 'Resources/Private/Templates/Elearning/MultipleChoice.html');
                $multipleChoiceOptions = $this->eLearningModel->doGetMultipleChoiceOption($questionRecord['question_id']);
                foreach ($multipleChoiceOptions as $key => $value) {
                    $multipleChoiceOptions[$key]['class'] = "";
                    if ($value['multiplechoice_answers_is_true'] == 1) {
                        $multipleChoiceOptions[$key]['class'] = "solutions_class";
                    }
                    if (isset($storeSessionValue['answerRecord'][$answerRecordKey]['point'])) {
                        $multipleChoiceOptions[$key]['checked'] = ( in_array($value['uid'], $storeSessionValue['answerRecord'][$answerRecordKey]['answerText']) ) ? 'checked' : '';
                    }
                }

                $buttonOptions['buttonChange'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'active' : 'disable';
                $buttonOptions['showAskAgain'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 1 || $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] == 1 ) ? 'none' : '';
                $buttonOptions['askAgainButtonValue'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 && !is_null($storeSessionValue['answerRecord'][$answerRecordKey]['point']) ) ? Tx_Extbase_Utility_Localization::translate('pits_elearn.askAgain', 'pitsElearn') : Tx_Extbase_Utility_Localization::translate('pits_elearn.checkAnswer', 'pitsElearn');
                $buttonOptions['showSolutionStatus'] = ( $storeSessionValue['answerRecord'][$answerRecordKey]['point'] == 0 ) ? 'disabled' : '';
                $buttonOptions['showSolutionStatus'] = $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'];
                $this->view->assign('multipleChoiceOptions', $multipleChoiceOptions);
                break;
            default:
                $currentSesssion = $this->doGetRestRecords($storeSessionValue['answerRecord']);
                $this->storeSession($currentSesssion);
                //$this->redirect('resultRender');
                $this->forward('resultRender','Elearning','pitsElearn');
                break;
        }

        if ($request['type'] == "next_quest") {
            $storeSessionValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionVal");
            $storeSessionValue = unserialize($storeSessionValue);
            $answerRecordKey = $questionRecord['type'] . "_" . $questionRecord['question_id'];
            $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'] = (!empty($storeSessionValue['answerRecord'][$answerRecordKey]['answerText']) ) ? $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'] : $request['answerData'];
            $storeSessionValue['answerRecord'][$answerRecordKey]['point'] = $storeSessionValue['answerRecord'][$answerRecordKey]['point'];
            $storeSessionValue['currentRecordCount'] = $storeSessionValue['currentRecordCount'] + 1;

            if ($request['quest_status'] == 1) {
                $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] = $request['quest_status'];
            }
            else {
                $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] = 0;
            }
            $this->storeSession($storeSessionValue);
            $successData['proceed_next'] = TRUE;
            echo json_encode($successData);
            exit;
        }

        if ($request['type'] == "previous_quest") {
            $storeSessionValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionVal");
            $storeSessionValue = unserialize($storeSessionValue);
            $storeSessionValue['currentRecordCount'] = $storeSessionValue['currentRecordCount'] - 1;
            $this->storeSession($storeSessionValue);
            $successData['previousQuest'] = TRUE;
            echo json_encode($successData);
            exit;
        }

        if (!empty($request['type']) && !empty($questionRecord['question_id'])) {
            $ansCheck = $this->answerValidate($questionRecord['question_id'], $questionRecord['type'], $request['answerData']);
        }

        $this->view->assign('action', t3lib_div::getIndpEnv('TYPO3_SITE_URL') . "index.php?id=" . $flexformValues['targetPage']);
        $this->view->assign('pageId', $GLOBALS['TSFE']->id);
        $questionRecord['nextlink_label'] = Tx_Extbase_Utility_Localization::translate('pits_elearn.proceed_next', 'pitsElearn');
        $questionRecord['previouslink_label'] = Tx_Extbase_Utility_Localization::translate('pits_elearn.previous', 'pitsElearn');
        $questionRecord['sponsertext_label'] = (!empty($questionRecord['sponser_link']) ) ? Tx_Extbase_Utility_Localization::translate('pits_elearn.sponsertext_label', 'pitsElearn') : '';
        $questionRecord['lastRecordFlag'] = ( $storeSessionValue['currentRecordCount'] == $questionCount - 1 ) ? 1 : 0;
        $questionRecord['firstRecordFlag'] = ( $storeSessionValue['currentRecordCount'] == 0 ) ? 1 : 0;
        //$questionRecord['partnerImages'] = $this->doGetCheckPartnerImages($storeSessionValue['selectedChapter']);
        // For Showing Question Counter in frontend.
        $questionNo = $storeSessionValue['currentRecordCount'] + 1;
        $questionCountLabel = Tx_Extbase_Utility_Localization::translate('pits_elearn.questCount', 'pitsElearn');

        $buttonOptions['showSolnButtonChange'] = ( isset($storeSessionValue['answerRecord'][$answerRecordKey]['point']) ) ? "soln_active" : '';
        $buttonOptions['showSolnButtonEnable'] = ( isset($storeSessionValue['answerRecord'][$answerRecordKey]['point']) ) ? "" : 'disabled';
        $buttonOptions['showSolStatus'] = $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'];
        $questionCounter['counter'] = sprintf($questionCountLabel, $questionNo, $questionCount);
        $this->view->assign('questionCount', $questionCounter);
        $questionRecord['detailPage'] = $this->settings['detail_viewPid'];
        $this->view->assign('buttonOpt', $buttonOptions);
        $this->view->assign('questionsRecord', $questionRecord);
        $this->view->assign('answerClass', 'solutions_class');
        $this->view->assign('sysLangId', $GLOBALS['TSFE']->sys_language_uid);
    }

    public function answerValidate($questionUid, $questionType, $answerData) {

        $storeSessionValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionVal");
        if (( sizeof($storeSessionValue) > 0))
            $storeSessionValue = unserialize($storeSessionValue);

        $answerRecordKey = $questionType . "_" . $questionUid;
        $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'] = $answerData;
        $successData['errortext'] = '';
        switch ($questionType) {
            case 'freetext' :
                if (empty($answerData)) {
                    $successData['errortext'] = Tx_Extbase_Utility_Localization::translate('pits_elearn.answerEmpty_error', 'pitsElearn');
                }
                else {
                    $answerDatatoLower = strtolower($answerData);
                    $trueAnswerData = $this->eLearningModel->doGetFreeTextAnswer($questionUid);
                    $trueAnswerArray = array_map('trim', array_map('strtolower', explode(",", $trueAnswerData['answer_text'])));
                    $successData['ansStatus'] = ( in_array($answerDatatoLower, $trueAnswerArray) ) ? 1 : 0;
                }
                break;
            case 'mutiple_choice' :
                if (empty($answerData)) {
                    $successData['errortext'] = Tx_Extbase_Utility_Localization::translate('pits_elearn.answerEmpty_error', 'pitsElearn');
                }
                else {
                    $trueAnswerInDb = $this->eLearningModel->doGetMultipleChoiceAnswer($questionUid);
                    if (count($trueAnswerInDb) != count($answerData)) {
                        $successData['ansStatus'] = 0;
                    }
                    else {
                        $successData['ansStatus'] = 1;
                        foreach ($answerData as $value) {
                            $GLOBALS['TYPO3_DB']->store_lastBuiltQuery = 1;
                            $res = $GLOBALS['TYPO3_DB']->exec_SELECTgetRows('*', 'tx_pitselearn_domain_model_multiplechoice_answers', 'parentid=' . $questionUid . ' AND multiplechoice_answers_is_true = 1 AND uid = ' . $value . ' AND deleted = 0 AND hidden = 0');
                            if (sizeof($res) == 0) {
                                $successData['ansStatus'] = 0;
                            }
                        }
                    }
                }
                break;
            case 'matrix' :
                $successData['errortext'] = empty($answerData['mat_question_id']) ? Tx_Extbase_Utility_Localization::translate('pits_elearn.answerEmpty_error', 'pitsElearn') : "";
                $successData['ansStatus'] = 1;
                $matrixQuestionId = array_unique($answerData['matrixQuestionId']);
                foreach ($matrixQuestionId as $questionKey => $matrixQuestion) {
                    $matrixTrueAnswers = $this->eLearningModel->doGetRightAnswerCount($matrixQuestion, '');
                    foreach ($matrixTrueAnswers as $key => $matrixTrueAnswer) {
                        if (!in_array($matrixTrueAnswer['uid'], $answerData['mat_question_id'][$matrixQuestion]) || count($answerData['mat_question_id'][$matrixQuestion]) != count($matrixTrueAnswers)) {
                            $successData['ansStatus'] = 0;
                            break;
                        }
                    }
                }
                break;
            case 'dragdrop' :
                if (empty($answerData)) {
                    $successData['errortext'] = Tx_Extbase_Utility_Localization::translate('pits_elearn.answerEmpty_error', 'pitsElearn');
                }
                else {
                    foreach ($answerData as $key => $value) {
                        $ansState[] = ( $value['answerId'] == $value['correctId'] ) ? 1 : 0;
                        $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'][$key]['answerId'] = $value['answerId'];
                        $storeSessionValue['answerRecord'][$answerRecordKey]['answerText'][$key]['answerImagePath'] = $value['answerImagePath'];
                    }
                    $successData['ansStatus'] = ( in_array(0, $ansState) ) ? 0 : 1;
                }
                break;
        }
        $storeSessionValue['answerRecord'][$answerRecordKey]['point'] = 0;
        if ($successData['ansStatus'] == 1) {
            $storeSessionValue['answerRecord'][$answerRecordKey]['point'] = $successData['ansStatus'];
        }
        echo json_encode($successData);
        $this->storeSession($storeSessionValue);
        exit;
    }

    public function showResultAction() {
        $request = $this->request->getArguments();
        $storeSessionValue = $this->doGetSessionRecords();
        $answerRecordKey = $request['qType'] . "_" . $request['qId'];
        $storeSessionValue['answerRecord'][$answerRecordKey]['showSolutionStatus'] = 1;
        $this->storeSession($storeSessionValue);
        $answerArr = $this->eLearningModel->doGetResult($request);
    }

    public function resultRenderAction() {
        $this->cObj = $this->configurationManager->getContentObject();
        $recordPid = $this->cObj->data['pages'];
        $elearningsThema = $this->eLearningModel->doGetThema($recordPid);
        $request = $this->request->getArguments();
        $storeSessionValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionVal");
        $sessionViewValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionView");
        if (( sizeof($storeSessionValue) > 0))
            $storeSessionValue = unserialize($storeSessionValue);
        if (!empty($request['tnt_thema']) && !empty($request['tnt_thema_chapter'])) {
            $currentSesssion['selectedThema'] = $request['tnt_thema'];
            $currentSesssion['selectedChapter'] = $request['tnt_thema_chapter'];
            $currentSesssion['currentRandomSeed'] = $storeSessionValue['currentRandomSeed'];
            $currentSesssion['mark'] = '';
            $this->storeSession($currentSesssion);
        /*    $conf = array(
                'parameter' => $this->settings['targetPage'],
                'additionalParams' => '&tx_pitselearn_pitselearn[action]=detail',
                'useCashHash' => true,
                'returnLast' => 'url',
            );*/
           
           $location = $GLOBALS['TSFE']->baseUrl . $this->cObj->typoLink('', $conf);
           // $this->forward('detail','Elearning','pitsElearn');
            $this->redirect($location);
            // exit;
        }
        else {
            $currentSesssion['selectedThema'] = $storeSessionValue['selectedThema'];
            $currentSesssion['selectedChapter'] = $storeSessionValue['selectedChapter'];
            $currentSesssion['currentRandomSeed'] = $storeSessionValue['currentRandomSeed'];
        }
        $resultRecords['detailPage'] = $this->settings['detail_viewPid'];
        //$resultRecords['partnerImages'] = $this->doGetCheckPartnerImages($sessionViewValue['selectedChapter']);
        $resultRecords['preFillData']['selectedThema'] = $sessionViewValue['selectedThema'];
        $resultRecords['preFillData']['selectedChapter'] = $this->doGetContent($sessionViewValue['selectedThema']);
        $resultRecords['pageId'] = $GLOBALS['TSFE']->id;
        $resultRecords['elearnings'] = $elearningsThema;
        $resultRecords['score'] = $storeSessionValue['mark'];
        $this->view->assign('resultRecord', $resultRecords);
        $this->view->assign('sysLangId', $GLOBALS['TSFE']->sys_language_uid);
    }

    public function storeSession($sessionArray) {
        $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionVal", serialize($sessionArray));
        $GLOBALS["TSFE"]->fe_user->sesData_change = true;
        $GLOBALS["TSFE"]->fe_user->storeSessionData();
    }

    /*
     * Reset records
     */

    public function doGetRestRecords($answerTextArray, $questionCount) {

        $totalPoints = 0;
        foreach ($answerTextArray as $keyindex => $pointValues) {
            $totalPoints+=$pointValues['point'];
        }
        $percentageVal = ( $totalPoints / $questionCount ) * 100;
        $truePercentage = number_format($percentageVal, 2) . '%';
        $totalmark_label = Tx_Extbase_Utility_Localization::translate('pits_elearn.totalmark_label', 'pitsElearn');
        $markText = sprintf($totalmark_label, $truePercentage);
        $currentSesssion['selectedThema'] = '';
        $currentSesssion['selectedChapter'] = '';
        $currentSesssion['currentRecordCount'] = 0;
        $currentSesssion['mark'] = $markText;
        $currentSesssion['currentRandomSeed'] = time();
        return $currentSesssion;
    }

    public function doGetSessionRecords() {
        $storeSessionValue = $GLOBALS["TSFE"]->fe_user->getKey("ses", "sessionVal");
        if (( sizeof($storeSessionValue) > 0))
            $storeSessionValue = unserialize($storeSessionValue);
        return $storeSessionValue;
    }

    /**
     * function doGetCheckPartnerImages
     *
     * @param
     * @return void
     * function to check whether the file physically exists.
     */
    public function doGetCheckPartnerImages($chapterId) {

        $this->cObj = $this->configurationManager->getContentObject();
        $enableFieldsChapter = $this->cObj->enableFields('tx_pitselearn_domain_model_chapter');
        $partnerId = $this->eLearningModel->doGetAllPartners($enableFieldsChapter, $chapterId);
        $imageArr = $this->eLearningModel->doGetAllPartnerImages($enableFields, $partnerId);
        $isEmptyImagePresent = 1;
        foreach ($imageArr as $key => $value) {
            if (!file_exists('fileadmin/Dateien/Bildungspartner/Logos_sw/' . $value['user_image']) || empty($value['user_image'])) {
                $isEmptyImagePresent = 0;
            }
        }
        if ($isEmptyImagePresent == 0) {
            return $this->doGetCheckPartnerImages($chapterId);
        }
        else {
            return $imageArr;
        }
    }

    public function themaLinkAction() {
        $settingsArr = $this->settings;
        $themaChapters = $this->eLearningModel->doGetChapters($settingsArr['themaSelect']);
        $request = $this->request->getArguments();
        if (sizeof($request) > 0) {
            if (!empty($request['tnt_thema'])) {
                $currentSesssion['selectedThema'] = $request['tnt_thema'];
                $detailSession['selectedThema'] = $request['tnt_thema'];
            }
            if (!empty($request['tnt_thema_chapter'])) {
                $currentSesssion['selectedChapter'] = $request['tnt_thema_chapter'];
                $detailSession['selectedChapter'] = $request['tnt_thema_chapter'];
            }
            $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionVal", serialize($currentSesssion));
            $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionView", $detailSession);
            $GLOBALS["TSFE"]->fe_user->sesData_change = true;
            $GLOBALS["TSFE"]->fe_user->storeSessionData();
            $conf = array(
                'parameter' => $this->settings['targetPage'],
                'additionalParams' => '&tx_pitselearn_pitselearn[action]=detail',
                'useCashHash' => true,
                'returnLast' => 'url',
            );
            $location = $GLOBALS['TSFE']->baseUrl . $this->cObj->typoLink('', $conf);
            $this->redirectToURI($location);
        }
        else {
            $GLOBALS["TSFE"]->fe_user->setKey("ses", "sessionVal", "");
            $GLOBALS["TSFE"]->fe_user->sesData_change = true;
            $GLOBALS["TSFE"]->fe_user->storeSessionData();
        }
        $resultRecord['themaId'] = $settingsArr['themaSelect'];
        $resultRecord['elearnings'] = $themaChapters;
        $this->view->assign('resultRecord', $resultRecord);
        $this->view->assign('sysLangId', $GLOBALS['TSFE']->sys_language_uid);
    }

}

?>
